{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documentation To Rest Framework in SAP ABAP Welcome to the Main Documentation Page of the ABAP Rest Framework. This Framework is splitted into two parts. Service Side Client Side","title":"About"},{"location":"#documentation-to-rest-framework-in-sap-abap","text":"Welcome to the Main Documentation Page of the ABAP Rest Framework. This Framework is splitted into two parts. Service Side Client Side","title":"Documentation To Rest Framework in SAP ABAP"},{"location":"service/","text":"Rest Service Overview - The Framework consists of 3 layers, where each layer is responsible for specific task. - These layers are: Router Layer - Responsible for redirecting traffic to correct endpoint Helper Layer - Serves to seperate logic between router and database Customizing Layer - Layer consists of customizing tables that users can modify Router Layer Router Layer consists of Routers, Subrouters and Factory Classes that serve to redirect traffic to correct endpoint. Router Classes Router class serves as a generic logic, that controlls the entire logic. It's job is to create helper, use the helper in factory classes, run correct subrouter and then the correct endpoint. For more information see ZCL_REST_ROUTER Subrouter Classes The job of Subrouters is to find correct path based on URI. It doesn't consern if the endpoint exists, just that the route does. Each service can have different subrouter. Subrouters use interface ZIF_REST_SUBROUTER . Factory Classes Factory classes serve to create objects based on data they get from helper. Framework currently has two factory classes ZCL_REST_SUBROUTER_FACTORY and ZCL_REST_ENDPOINT_FACTORY Helper Layer Helper Layer is an abstraction between database and other logic. It's whole purpose is to seperate database logic to it's own class so that the framework is more maintainable. See ZCL_REST_ROUTER_HELPER for more info. Customizing Layer Customizing Layer consists of customizing tables. These tables can be modified by users for their own services and methods. See: ZCT_SERVICE ZCT_ENDPOINT","title":"Home"},{"location":"service/#rest-service-overview","text":"- The Framework consists of 3 layers, where each layer is responsible for specific task. - These layers are: Router Layer - Responsible for redirecting traffic to correct endpoint Helper Layer - Serves to seperate logic between router and database Customizing Layer - Layer consists of customizing tables that users can modify","title":"Rest Service Overview"},{"location":"service/#router-layer","text":"Router Layer consists of Routers, Subrouters and Factory Classes that serve to redirect traffic to correct endpoint.","title":"Router Layer"},{"location":"service/#router-classes","text":"Router class serves as a generic logic, that controlls the entire logic. It's job is to create helper, use the helper in factory classes, run correct subrouter and then the correct endpoint. For more information see ZCL_REST_ROUTER","title":"Router Classes"},{"location":"service/#subrouter-classes","text":"The job of Subrouters is to find correct path based on URI. It doesn't consern if the endpoint exists, just that the route does. Each service can have different subrouter. Subrouters use interface ZIF_REST_SUBROUTER .","title":"Subrouter Classes"},{"location":"service/#factory-classes","text":"Factory classes serve to create objects based on data they get from helper. Framework currently has two factory classes ZCL_REST_SUBROUTER_FACTORY and ZCL_REST_ENDPOINT_FACTORY","title":"Factory Classes"},{"location":"service/#helper-layer","text":"Helper Layer is an abstraction between database and other logic. It's whole purpose is to seperate database logic to it's own class so that the framework is more maintainable. See ZCL_REST_ROUTER_HELPER for more info.","title":"Helper Layer"},{"location":"service/#customizing-layer","text":"Customizing Layer consists of customizing tables. These tables can be modified by users for their own services and methods. See: ZCT_SERVICE ZCT_ENDPOINT","title":"Customizing Layer"},{"location":"classes/ZCL_REST_ENDPOINT_FACTORY/","text":"Endpoint Factory Creates Endpoint objects wrapped in Security classes from given helper class. Interfaces ZIF_REST_SUBROUTER_FACTORY Methods CONSTRUCTOR Parameters: Parameter Type Typing Method As. Type Description Other IO_HELPER Imp. Type Ref To ZIF_REST_ROUTER_HELPER Interface For Router Helper IV_ENDPOINT Imp. Type ZDE_SERVICE_ENDPOINT Endpoint For A Service","title":"ZCL_REST_ENDPOINT_FACTORY"},{"location":"classes/ZCL_REST_ENDPOINT_FACTORY/#endpoint-factory","text":"Creates Endpoint objects wrapped in Security classes from given helper class.","title":"Endpoint Factory"},{"location":"classes/ZCL_REST_ENDPOINT_FACTORY/#interfaces","text":"ZIF_REST_SUBROUTER_FACTORY","title":"Interfaces"},{"location":"classes/ZCL_REST_ENDPOINT_FACTORY/#methods","text":"","title":"Methods"},{"location":"classes/ZCL_REST_ENDPOINT_FACTORY/#constructor","text":"Parameters: Parameter Type Typing Method As. Type Description Other IO_HELPER Imp. Type Ref To ZIF_REST_ROUTER_HELPER Interface For Router Helper IV_ENDPOINT Imp. Type ZDE_SERVICE_ENDPOINT Endpoint For A Service","title":"CONSTRUCTOR"},{"location":"classes/ZCL_REST_ROUTER/","text":"Generic Rest Router Class Redirects the traffic to the correct endpoint Interfaces IF_REST_HANDLER Methods IF_REST_HANDLER~HANDLE Processes a REST Request Parameter Type Typing Method As. Type Description Other IO_REQUEST Imp Type Ref To IF_REST_REQUEST REST Request IO_RESPONSE Imp Type Ref To IF_REST_RESPONSE REST Response IO_CONTEXT Imp Type Ref To IF_REST_CONTEXT REST Response","title":"ZCL_REST_ROUTER"},{"location":"classes/ZCL_REST_ROUTER/#generic-rest-router-class","text":"Redirects the traffic to the correct endpoint","title":"Generic Rest Router Class"},{"location":"classes/ZCL_REST_ROUTER/#interfaces","text":"IF_REST_HANDLER","title":"Interfaces"},{"location":"classes/ZCL_REST_ROUTER/#methods","text":"","title":"Methods"},{"location":"classes/ZCL_REST_ROUTER/#if_rest_handlerhandle","text":"Processes a REST Request Parameter Type Typing Method As. Type Description Other IO_REQUEST Imp Type Ref To IF_REST_REQUEST REST Request IO_RESPONSE Imp Type Ref To IF_REST_RESPONSE REST Response IO_CONTEXT Imp Type Ref To IF_REST_CONTEXT REST Response","title":"IF_REST_HANDLER~HANDLE"},{"location":"classes/ZCL_REST_ROUTER_HELPER/","text":"Helper Class For Router Used to abstract database logic and router logic Interfaces ZIF_REST_ROUTER_HELPER Methods CONSTRUCTOR Parameters: Parameter Type Typing Method As. Type Description Other IV_SERVICE Imp Type ZDE_SERVICE_NAME Name of Rest Service IV_METHOD Imp Type ZDE_REST_METHOD Rest Method Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"ZCL_REST_ROUTER_HELPER"},{"location":"classes/ZCL_REST_ROUTER_HELPER/#helper-class-for-router","text":"Used to abstract database logic and router logic","title":"Helper Class For Router"},{"location":"classes/ZCL_REST_ROUTER_HELPER/#interfaces","text":"ZIF_REST_ROUTER_HELPER","title":"Interfaces"},{"location":"classes/ZCL_REST_ROUTER_HELPER/#methods","text":"","title":"Methods"},{"location":"classes/ZCL_REST_ROUTER_HELPER/#constructor","text":"Parameters: Parameter Type Typing Method As. Type Description Other IV_SERVICE Imp Type ZDE_SERVICE_NAME Name of Rest Service IV_METHOD Imp Type ZDE_REST_METHOD Rest Method Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"CONSTRUCTOR"},{"location":"classes/ZCL_REST_SUBROUTER_FACTORY/","text":"Subrouter Factory Creates Subrouter objects from given helper class. Interfaces ZIF_REST_SUBROUTER_FACTORY Methods CONSTRUCTOR Parameters: Parameter Type Typing Method As. Type Description Other IO_HELPER Imp. Type Ref To ZIF_REST_ROUTER_HELPER Interface For Router Helper","title":"ZCL_REST_SUBROUTER_FACTORY"},{"location":"classes/ZCL_REST_SUBROUTER_FACTORY/#subrouter-factory","text":"Creates Subrouter objects from given helper class.","title":"Subrouter Factory"},{"location":"classes/ZCL_REST_SUBROUTER_FACTORY/#interfaces","text":"ZIF_REST_SUBROUTER_FACTORY","title":"Interfaces"},{"location":"classes/ZCL_REST_SUBROUTER_FACTORY/#methods","text":"","title":"Methods"},{"location":"classes/ZCL_REST_SUBROUTER_FACTORY/#constructor","text":"Parameters: Parameter Type Typing Method As. Type Description Other IO_HELPER Imp. Type Ref To ZIF_REST_ROUTER_HELPER Interface For Router Helper","title":"CONSTRUCTOR"},{"location":"classes/ZCL_REST_SUBROUTER_SMART/","text":"Smart Subrouter Class Finds Best Matching Route. Rules to finding a route: The endpoint that is contained in URI is selected. Every other value is then taken as a parameter to the last endpoint part. If there are more endpoints that are contained in URI, the one that has parts sooner in URI is selected. For instance if We have endpoints /ep1/ep2/ep3 and ep1/ep4/ep3 and URI ep1/value1/ep2/ep4/value2/value3/ep3, then the first one is selected. With values ep1->value1, ep4->value2, ep4->value3 Interfaces ZIF_REST_SUBROUTER","title":"ZCL_REST_SUBROUTER_SMART"},{"location":"classes/ZCL_REST_SUBROUTER_SMART/#smart-subrouter-class","text":"Finds Best Matching Route. Rules to finding a route: The endpoint that is contained in URI is selected. Every other value is then taken as a parameter to the last endpoint part. If there are more endpoints that are contained in URI, the one that has parts sooner in URI is selected. For instance if We have endpoints /ep1/ep2/ep3 and ep1/ep4/ep3 and URI ep1/value1/ep2/ep4/value2/value3/ep3, then the first one is selected. With values ep1->value1, ep4->value2, ep4->value3","title":"Smart Subrouter Class"},{"location":"classes/ZCL_REST_SUBROUTER_SMART/#interfaces","text":"ZIF_REST_SUBROUTER","title":"Interfaces"},{"location":"exclass/ZCX_ST_REST_SERVER_CL_ERROR/","text":"Service Application Exception This is Static Exception class for Errors on Service side because of invalid Client Request. After this exception is propageted to the Router class, the status of the service is set to 400. Superclass ZCX_ST_REST_SERVER_FAIL","title":"ZCX_ST_REST_SERVER_CL_ERROR"},{"location":"exclass/ZCX_ST_REST_SERVER_CL_ERROR/#service-application-exception","text":"This is Static Exception class for Errors on Service side because of invalid Client Request. After this exception is propageted to the Router class, the status of the service is set to 400.","title":"Service Application Exception"},{"location":"exclass/ZCX_ST_REST_SERVER_CL_ERROR/#superclass","text":"ZCX_ST_REST_SERVER_FAIL","title":"Superclass"},{"location":"exclass/ZCX_ST_REST_SERVER_FAIL/","text":"Service Application Exception This is Static Exception class for Errors on Service side. After this exception is propageted to the Router class, the status of the service is set to 500. Superclass CX_STATIC_CHECK","title":"ZCX_ST_REST_SERVER_FAIL"},{"location":"exclass/ZCX_ST_REST_SERVER_FAIL/#service-application-exception","text":"This is Static Exception class for Errors on Service side. After this exception is propageted to the Router class, the status of the service is set to 500.","title":"Service Application Exception"},{"location":"exclass/ZCX_ST_REST_SERVER_FAIL/#superclass","text":"CX_STATIC_CHECK","title":"Superclass"},{"location":"interfaces/ZIF_ENDPOINT/","text":"Endpoint Interface Interface For user definable endpoint classes. By Extending this interface you can create new endpoints. The endpoint is then run in the RUN_SERVICE method Methods RUN_SERVICE Parameters: Parameter Type Typing Method As. Type Description Other IO_REQUEST Imp. Type Ref To IF_REST_REQUEST REST Request IO_RESPONSE Imp. Type Ref To IF_REST_RESPONSE REST Response IO_CONTEXT Imp. Type Ref To IF_REST_CONTEXT REST Context IO_VALUES Imp. Type ZTT_URI_VALUE Rest Method Optional Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"ZIF_ENDPOINT"},{"location":"interfaces/ZIF_ENDPOINT/#endpoint-interface","text":"Interface For user definable endpoint classes. By Extending this interface you can create new endpoints. The endpoint is then run in the RUN_SERVICE method","title":"Endpoint Interface"},{"location":"interfaces/ZIF_ENDPOINT/#methods","text":"","title":"Methods"},{"location":"interfaces/ZIF_ENDPOINT/#run_service","text":"Parameters: Parameter Type Typing Method As. Type Description Other IO_REQUEST Imp. Type Ref To IF_REST_REQUEST REST Request IO_RESPONSE Imp. Type Ref To IF_REST_RESPONSE REST Response IO_CONTEXT Imp. Type Ref To IF_REST_CONTEXT REST Context IO_VALUES Imp. Type ZTT_URI_VALUE Rest Method Optional Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"RUN_SERVICE"},{"location":"interfaces/ZIF_REST_ENDPOINT_FACTORY/","text":"Endpoint Factory Interface With the use of Helper Class, classes implementing this interface create endpoint class Methods GET_SECURED_ENDPOINT Get Subrouter Class Parameters: Parameter Type Typing Method As. Type Description Other RO_RESULT Ret. Type Ref To ZIF_REST_SUBROUTER Interface For Rest Subrouter Value Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"ZIF_REST_ENDPOINT_FACTORY"},{"location":"interfaces/ZIF_REST_ENDPOINT_FACTORY/#endpoint-factory-interface","text":"With the use of Helper Class, classes implementing this interface create endpoint class","title":"Endpoint Factory Interface"},{"location":"interfaces/ZIF_REST_ENDPOINT_FACTORY/#methods","text":"","title":"Methods"},{"location":"interfaces/ZIF_REST_ENDPOINT_FACTORY/#get_secured_endpoint","text":"Get Subrouter Class Parameters: Parameter Type Typing Method As. Type Description Other RO_RESULT Ret. Type Ref To ZIF_REST_SUBROUTER Interface For Rest Subrouter Value Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"GET_SECURED_ENDPOINT"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/","text":"Router Helper Interface This interface provides methods, that enable classes on the Router Layer to obtain information from the database Only classes that have this interface should be working with Customizng Layer data. Methods GET_ENDPOINT_ROUTES Get All Endpoint Routes Parameters: Parameter Type Typing Method As. Type Description Other RT_RESULT Ret. Type TT_ROUTES Table Of Possible Endpoint Routes Value GET_SERVICE Get Service Name Parameters: Parameter Type Typing Method As. Type Description Other RV_RESULT Ret. Type ZIF_REST_ROUTER_HELPER Name of Rest Service Value GET_METHOD Get Rest Method For Endpoint Parameters: Parameter Type Typing Method As. Type Description Other RV_RESULT Imp. Type ZDE_REST_METHOD Rest Method Value GET_SECURITY Get Name of the Security Class Parameters: Parameter Type Typing Method As. Type Description Other IV_ENDPOINT Imp. Type ZDE_SERVICE_ENDPOINT Endpoint For A Service RV_SECURITY Imp. Type CLASSNAME Security Class Name GET_DESTINATION_FOR_ENDPOINT Get Destination For the Endpoint Parameters: Parameter Type Typing Method As. Type Description Other IV_ENDPOINT Imp. Type ZDE_SERVICE_ENDPOINT Endpoint For A Service RV_DESTINATION Ret. Type CLASSNAME Endpoint Class Name Value Exceptions: ZCX_ST_REST_SERVER_FAIL GET_SUBROUTER_CLASS Get Name of the Subrouter Class Parameters: Parameter Type Typing Method As. Type Description Other RV_SUBROUTER Ret. Type CLASSNAME Subrouter Class Name Exceptions: ZCX_ST_REST_SERVER_FAIL Attributes Attribute Level Typing Method As. Type Description Other CO_ROUTER_TYPES Constant Structure Router Types Constant CO_ROUTER_CLASSES Constant Structure Router Classes Constant Stuctures CO_ROUTER_TYPES Name Typing Method As. Type Value smart Type ZDE_ROUTER_TYPE 'SMART' CO_ROUTER_CLASSES Name Typing Method As. Type Value smart Type CLASSNAME 'ZCL_REST_SUBROUTER_SMART'","title":"ZIF_REST_ROUTER_HELPER"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#router-helper-interface","text":"This interface provides methods, that enable classes on the Router Layer to obtain information from the database Only classes that have this interface should be working with Customizng Layer data.","title":"Router Helper Interface"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#methods","text":"","title":"Methods"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#get_endpoint_routes","text":"Get All Endpoint Routes Parameters: Parameter Type Typing Method As. Type Description Other RT_RESULT Ret. Type TT_ROUTES Table Of Possible Endpoint Routes Value","title":"GET_ENDPOINT_ROUTES"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#get_service","text":"Get Service Name Parameters: Parameter Type Typing Method As. Type Description Other RV_RESULT Ret. Type ZIF_REST_ROUTER_HELPER Name of Rest Service Value","title":"GET_SERVICE"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#get_method","text":"Get Rest Method For Endpoint Parameters: Parameter Type Typing Method As. Type Description Other RV_RESULT Imp. Type ZDE_REST_METHOD Rest Method Value","title":"GET_METHOD"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#get_security","text":"Get Name of the Security Class Parameters: Parameter Type Typing Method As. Type Description Other IV_ENDPOINT Imp. Type ZDE_SERVICE_ENDPOINT Endpoint For A Service RV_SECURITY Imp. Type CLASSNAME Security Class Name","title":"GET_SECURITY"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#get_destination_for_endpoint","text":"Get Destination For the Endpoint Parameters: Parameter Type Typing Method As. Type Description Other IV_ENDPOINT Imp. Type ZDE_SERVICE_ENDPOINT Endpoint For A Service RV_DESTINATION Ret. Type CLASSNAME Endpoint Class Name Value Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"GET_DESTINATION_FOR_ENDPOINT"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#get_subrouter_class","text":"Get Name of the Subrouter Class Parameters: Parameter Type Typing Method As. Type Description Other RV_SUBROUTER Ret. Type CLASSNAME Subrouter Class Name Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"GET_SUBROUTER_CLASS"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#attributes","text":"Attribute Level Typing Method As. Type Description Other CO_ROUTER_TYPES Constant Structure Router Types Constant CO_ROUTER_CLASSES Constant Structure Router Classes Constant","title":"Attributes"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#stuctures","text":"","title":"Stuctures"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#co_router_types","text":"Name Typing Method As. Type Value smart Type ZDE_ROUTER_TYPE 'SMART'","title":"CO_ROUTER_TYPES"},{"location":"interfaces/ZIF_REST_ROUTER_HELPER/#co_router_classes","text":"Name Typing Method As. Type Value smart Type CLASSNAME 'ZCL_REST_SUBROUTER_SMART'","title":"CO_ROUTER_CLASSES"},{"location":"interfaces/ZIF_REST_SECURITY_WRAPPER/","text":"Security Wrapper Interface Security Wrapper For specific Endpoints. By Extending this interface you can create new security classes. The security can be either specific for endpoints, or/and the service. If security is defined on endpoint, it will be used, otherwise the security of service will be used. There is predefined class ZCL_REST_SECURITY_NONE , that is used when no security is defined. The security is then run in the RUN_SERVICE method Methods RUN_SERVICE Parameters: Parameter Type Typing Method As. Type Description Other IO_REQUEST Imp. Type Ref To IF_REST_REQUEST REST Request IO_RESPONSE Imp. Type Ref To IF_REST_RESPONSE REST Response IO_CONTEXT Imp. Type Ref To IF_REST_CONTEXT REST Context IO_VALUES Imp. Type ZTT_URI_VALUE Rest Method Optional Exceptions: ZCX_ST_REST_SERVER_FAIL Attributes Attribute Level Typing Method As. Type Description Other IO_REQUEST Instance Type Ref To IF_ENDPOINT Endpoint For Rest Service","title":"ZIF_REST_SECURITY_WRAPPER"},{"location":"interfaces/ZIF_REST_SECURITY_WRAPPER/#security-wrapper-interface","text":"Security Wrapper For specific Endpoints. By Extending this interface you can create new security classes. The security can be either specific for endpoints, or/and the service. If security is defined on endpoint, it will be used, otherwise the security of service will be used. There is predefined class ZCL_REST_SECURITY_NONE , that is used when no security is defined. The security is then run in the RUN_SERVICE method","title":"Security Wrapper Interface"},{"location":"interfaces/ZIF_REST_SECURITY_WRAPPER/#methods","text":"","title":"Methods"},{"location":"interfaces/ZIF_REST_SECURITY_WRAPPER/#run_service","text":"Parameters: Parameter Type Typing Method As. Type Description Other IO_REQUEST Imp. Type Ref To IF_REST_REQUEST REST Request IO_RESPONSE Imp. Type Ref To IF_REST_RESPONSE REST Response IO_CONTEXT Imp. Type Ref To IF_REST_CONTEXT REST Context IO_VALUES Imp. Type ZTT_URI_VALUE Rest Method Optional Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"RUN_SERVICE"},{"location":"interfaces/ZIF_REST_SECURITY_WRAPPER/#attributes","text":"Attribute Level Typing Method As. Type Description Other IO_REQUEST Instance Type Ref To IF_ENDPOINT Endpoint For Rest Service","title":"Attributes"},{"location":"interfaces/ZIF_REST_SUBROUTER/","text":"Subrouter Interface The Router uses this interface to find route using specific method. Classes defined using this interface have only one role and that is to find specific route for given URI. It does not concern itself with object creation. It uses Helper class for database operations Methods FIND_ROUTE Finds route from given URI Parameters: Parameter Type Typing Method As. Type Description Other IO_HELPER Imp. Type Ref To ZIF_REST_ROUTER_HELPER Interface For Router Helper IV_PATH Imp. Type STRING URI Path ET_VALUES Exp. Type ZTT_URI_VALUE Table Type For URI Values RV_ENDPOINT Ret. Type ZDE_SERVICE_ENDPOINT Endpoint For Rest Service Value Exceptions: ZCX_ST_REST_SERVER_FAIL Attributes Attribute Level Typing Method As. Type Description Other CO_ROUTER_TYPES Constant Structure Router Types Constant CO_ROUTER_CLASSES Constant Structure Router Classes Constant Stuctures CO_ROUTER_TYPES Name Typing Method As. Type Value smart Type ZDE_ROUTER_TYPE 'SMART' CO_ROUTER_CLASSES Name Typing Method As. Type Value smart Type CLASSNAME 'ZCL_REST_SUBROUTER_SMART'","title":"ZIF_REST_SUBROUTER"},{"location":"interfaces/ZIF_REST_SUBROUTER/#subrouter-interface","text":"The Router uses this interface to find route using specific method. Classes defined using this interface have only one role and that is to find specific route for given URI. It does not concern itself with object creation. It uses Helper class for database operations","title":"Subrouter Interface"},{"location":"interfaces/ZIF_REST_SUBROUTER/#methods","text":"","title":"Methods"},{"location":"interfaces/ZIF_REST_SUBROUTER/#find_route","text":"Finds route from given URI Parameters: Parameter Type Typing Method As. Type Description Other IO_HELPER Imp. Type Ref To ZIF_REST_ROUTER_HELPER Interface For Router Helper IV_PATH Imp. Type STRING URI Path ET_VALUES Exp. Type ZTT_URI_VALUE Table Type For URI Values RV_ENDPOINT Ret. Type ZDE_SERVICE_ENDPOINT Endpoint For Rest Service Value Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"FIND_ROUTE"},{"location":"interfaces/ZIF_REST_SUBROUTER/#attributes","text":"Attribute Level Typing Method As. Type Description Other CO_ROUTER_TYPES Constant Structure Router Types Constant CO_ROUTER_CLASSES Constant Structure Router Classes Constant","title":"Attributes"},{"location":"interfaces/ZIF_REST_SUBROUTER/#stuctures","text":"","title":"Stuctures"},{"location":"interfaces/ZIF_REST_SUBROUTER/#co_router_types","text":"Name Typing Method As. Type Value smart Type ZDE_ROUTER_TYPE 'SMART'","title":"CO_ROUTER_TYPES"},{"location":"interfaces/ZIF_REST_SUBROUTER/#co_router_classes","text":"Name Typing Method As. Type Value smart Type CLASSNAME 'ZCL_REST_SUBROUTER_SMART'","title":"CO_ROUTER_CLASSES"},{"location":"interfaces/ZIF_REST_SUBROUTER_FACTORY/","text":"Subrouter Factory Interface With the use of Helper Class, classes implementing this interface create subrouter class Methods GET_SUBROUTER Get Subrouter Class Parameters: Parameter Type Typing Method As. Type Description Other RO_RESULT Ret. Type Ref To ZIF_REST_SUBROUTER Interface For Rest Subrouter Value Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"ZIF_REST_SUBROUTER_FACTORY"},{"location":"interfaces/ZIF_REST_SUBROUTER_FACTORY/#subrouter-factory-interface","text":"With the use of Helper Class, classes implementing this interface create subrouter class","title":"Subrouter Factory Interface"},{"location":"interfaces/ZIF_REST_SUBROUTER_FACTORY/#methods","text":"","title":"Methods"},{"location":"interfaces/ZIF_REST_SUBROUTER_FACTORY/#get_subrouter","text":"Get Subrouter Class Parameters: Parameter Type Typing Method As. Type Description Other RO_RESULT Ret. Type Ref To ZIF_REST_SUBROUTER Interface For Rest Subrouter Value Exceptions: ZCX_ST_REST_SERVER_FAIL","title":"GET_SUBROUTER"},{"location":"tables/ZCT_ENDPOINT/","text":"Customizing Table For Endpoint Management In this table user can setup endpoints for their services It has one foreign key SERV with header table ZCT_SERVICE . Mainteinance View ZMV_ENDPOINT Fields Field KEY Not NULL Data Element Data Type Description MANDT KEY Not NULL MANDT CLNT(3) Client SERV KEY Not NULL ZDE_SERVICE_NAME CHAR(20) Name of Rest Service REST_METHOD KEY Not NULL ZDE_REST_METHOD CHAR(10) Rest Method ENDPOINT KEY Not NULL ZDE_SERVICE_ENDPOINT CHAR(150) Endpoint For A Service INTERFACE_CLASS Not NULL CLASSNAME CHAR(30) Reference type SECURITY_CLASS CLASSNAME CHAR(30) Reference type","title":"ZCT_ENDPOINT"},{"location":"tables/ZCT_ENDPOINT/#customizing-table-for-endpoint-management","text":"In this table user can setup endpoints for their services It has one foreign key SERV with header table ZCT_SERVICE .","title":"Customizing Table For Endpoint Management"},{"location":"tables/ZCT_ENDPOINT/#mainteinance-view","text":"ZMV_ENDPOINT","title":"Mainteinance View"},{"location":"tables/ZCT_ENDPOINT/#fields","text":"Field KEY Not NULL Data Element Data Type Description MANDT KEY Not NULL MANDT CLNT(3) Client SERV KEY Not NULL ZDE_SERVICE_NAME CHAR(20) Name of Rest Service REST_METHOD KEY Not NULL ZDE_REST_METHOD CHAR(10) Rest Method ENDPOINT KEY Not NULL ZDE_SERVICE_ENDPOINT CHAR(150) Endpoint For A Service INTERFACE_CLASS Not NULL CLASSNAME CHAR(30) Reference type SECURITY_CLASS CLASSNAME CHAR(30) Reference type","title":"Fields"},{"location":"tables/ZCT_SERVICE/","text":"Customizing Table For Service Management In this table clients can customize their Services. Users can set up Service security and router type. Mainteinance View ZMV_SERVICE Fields Field KEY Not NULL Data Element Data Type Description MANDT KEY Not NULL MANDT CLNT(3) Client SERV KEY Not NULL ZDE_SERVICE_NAME CHAR(20) Name of Rest Service ROUTER Not NULL ZDE_REST_METHOD CHAR(10) Data Element For Router Type SECURITY_CLASS CLASSNAME CHAR(30) Endpoint For A Service","title":"ZCT_SERVICE"},{"location":"tables/ZCT_SERVICE/#customizing-table-for-service-management","text":"In this table clients can customize their Services. Users can set up Service security and router type.","title":"Customizing Table For Service Management"},{"location":"tables/ZCT_SERVICE/#mainteinance-view","text":"ZMV_SERVICE","title":"Mainteinance View"},{"location":"tables/ZCT_SERVICE/#fields","text":"Field KEY Not NULL Data Element Data Type Description MANDT KEY Not NULL MANDT CLNT(3) Client SERV KEY Not NULL ZDE_SERVICE_NAME CHAR(20) Name of Rest Service ROUTER Not NULL ZDE_REST_METHOD CHAR(10) Data Element For Router Type SECURITY_CLASS CLASSNAME CHAR(30) Endpoint For A Service","title":"Fields"}]}